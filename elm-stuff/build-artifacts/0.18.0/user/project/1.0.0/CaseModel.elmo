var _user$project$CaseModel$viewCase = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString(model)),
			_1: {ctor: '[]'}
		});
};
var _user$project$CaseModel$view = function (model) {
	var _p0 = model.theCase;
	switch (_p0.ctor) {
		case 'NotAsked':
			return _elm_lang$html$Html$text('Initializing: ');
		case 'Loading':
			return _elm_lang$html$Html$text('Loading: ');
		case 'Failure':
			return _elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'Error: ',
					_elm_lang$core$Basics$toString(_p0._0)));
		default:
			return _user$project$CaseModel$viewCase(_p0._0);
	}
};
var _user$project$CaseModel$Model = F2(
	function (a, b) {
		return {theCase: a, id: b};
	});
var _user$project$CaseModel$Case = F3(
	function (a, b, c) {
		return {id: a, title: b, description: c};
	});
var _user$project$CaseModel$decodeCase = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'description',
	_elm_lang$core$Json_Decode$string,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'title',
		_elm_lang$core$Json_Decode$string,
		A3(
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
			'id',
			_elm_lang$core$Json_Decode$string,
			_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$CaseModel$Case))));
var _user$project$CaseModel$GetCase = {ctor: 'GetCase'};
var _user$project$CaseModel$CaseResponse = function (a) {
	return {ctor: 'CaseResponse', _0: a};
};
var _user$project$CaseModel$getCase = function (id) {
	return A2(
		_elm_lang$core$Platform_Cmd$map,
		_user$project$CaseModel$CaseResponse,
		_krisajenkins$remotedata$RemoteData$sendRequest(
			A2(
				_elm_lang$http$Http$get,
				A2(_elm_lang$core$Basics_ops['++'], '/api/case/', id),
				_user$project$CaseModel$decodeCase)));
};
var _user$project$CaseModel$update = F2(
	function (msg, model) {
		var _p1 = msg;
		if (_p1.ctor === 'CaseResponse') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{theCase: _p1._0}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{theCase: _krisajenkins$remotedata$RemoteData$Loading}),
				_1: _user$project$CaseModel$getCase(model.id)
			};
		}
	});
